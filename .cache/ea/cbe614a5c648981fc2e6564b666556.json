{"id":"node_modules/rxjs/dist/esm5/internal/observable/merge.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/merge.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/observable/merge.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"../operators/mergeAll","loc":{"line":1,"column":25,"index":25},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/merge.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js"},{"name":"./innerFrom","loc":{"line":2,"column":26,"index":76},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/merge.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"},{"name":"./empty","loc":{"line":3,"column":22,"index":113},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/merge.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/empty.js"},{"name":"../util/args","loc":{"line":4,"column":40,"index":164},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/merge.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/args.js"},{"name":"./from","loc":{"line":5,"column":21,"index":201},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/merge.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nvar _mergeAll = require(\"../operators/mergeAll\");\nvar _innerFrom = require(\"./innerFrom\");\nvar _empty = require(\"./empty\");\nvar _args = require(\"../util/args\");\nvar _from = require(\"./from\");\nfunction merge() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var scheduler = (0, _args.popScheduler)(args);\n  var concurrent = (0, _args.popNumber)(args, Infinity);\n  var sources = args;\n  return !sources.length ? _empty.EMPTY : sources.length === 1 ? (0, _innerFrom.innerFrom)(sources[0]) : (0, _mergeAll.mergeAll)(concurrent)((0, _from.from)(sources, scheduler));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":13}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":23}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":14}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":17}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":24}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":4}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":10}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":13}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":20}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":4}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":12}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":19}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":4}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":12}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":19}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":21},"generated":{"line":12,"column":14}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":21},"generated":{"line":12,"column":15}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":21},"generated":{"line":12,"column":17}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":13,"column":10}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":13,"column":15}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":7}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":13}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":84},"generated":{"line":14,"column":17}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":19}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":21}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":24}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":33}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":34}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":84},"generated":{"line":14,"column":40}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":42}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":14,"column":44}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":84},"generated":{"line":14,"column":46}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":84},"generated":{"line":14,"column":48}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":4}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":8}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":9}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":11}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":12}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":15}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":24}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":25}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":27}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":22},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":17,"column":6}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":17},"generated":{"line":17,"column":15}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":17,"column":18}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":17,"column":22}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":32},"generated":{"line":17,"column":40}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":33},"generated":{"line":17,"column":42}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":17,"column":46}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":38},"generated":{"line":17,"column":47}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":18},"generated":{"line":18,"column":16}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":21},"generated":{"line":18,"column":19}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":21},"generated":{"line":18,"column":23}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":30},"generated":{"line":18,"column":38}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":31},"generated":{"line":18,"column":40}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":35},"generated":{"line":18,"column":44}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":37},"generated":{"line":18,"column":46}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":45},"generated":{"line":18,"column":54}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":46},"generated":{"line":18,"column":55}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":8},"generated":{"line":19,"column":6}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":15},"generated":{"line":19,"column":13}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":18},"generated":{"line":19,"column":16}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":52},"generated":{"line":19,"column":20}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":2},"generated":{"line":20,"column":2}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":20,"column":9}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":10},"generated":{"line":20,"column":10}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":20,"column":17}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":18},"generated":{"line":20,"column":18}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":24},"generated":{"line":20,"column":24}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":20,"column":27}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":96,"column":11},"generated":{"line":20,"column":39}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":20,"column":42}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":97,"column":13},"generated":{"line":20,"column":49}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":97,"column":14},"generated":{"line":20,"column":50}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":97,"column":20},"generated":{"line":20,"column":56}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":97,"column":25},"generated":{"line":20,"column":61}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":97,"column":26},"generated":{"line":20,"column":62}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":6},"generated":{"line":20,"column":65}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":6},"generated":{"line":20,"column":69}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":15},"generated":{"line":20,"column":89}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":16},"generated":{"line":20,"column":91}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":23},"generated":{"line":20,"column":98}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":24},"generated":{"line":20,"column":99}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":20,"column":100}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":26},"generated":{"line":20,"column":101}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":27},"generated":{"line":20,"column":102}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":20,"column":105}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":20,"column":109}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":14},"generated":{"line":20,"column":127}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":15},"generated":{"line":20,"column":129}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":25},"generated":{"line":20,"column":139}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":26},"generated":{"line":20,"column":140}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":27},"generated":{"line":20,"column":141}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":27},"generated":{"line":20,"column":145}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":31},"generated":{"line":20,"column":155}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":32},"generated":{"line":20,"column":157}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":39},"generated":{"line":20,"column":164}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":41},"generated":{"line":20,"column":166}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":50},"generated":{"line":20,"column":175}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":51},"generated":{"line":20,"column":176}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":101,"column":52},"generated":{"line":20,"column":177}},{"source":"../../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":0},"generated":{"line":21,"column":0}}],"sources":{"../../../../src/internal/observable/merge.ts":"import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n"},"lineCount":null}},"error":null,"hash":"08d8b898b9af0d126495bb7a87362469","cacheData":{"env":{}}}