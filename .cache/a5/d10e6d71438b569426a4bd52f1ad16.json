{"id":"node_modules/rxjs/dist/esm5/internal/observable/pairs.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/pairs.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/observable/pairs.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"./from","loc":{"line":1,"column":21,"index":21},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/pairs.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pairs = pairs;\nvar _from = require(\"./from\");\nfunction pairs(obj, scheduler) {\n  return (0, _from.from)(Object.entries(obj), scheduler);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":9}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":12}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":19}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":16},"generated":{"line":8,"column":9}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":21},"generated":{"line":8,"column":14}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":22},"generated":{"line":8,"column":15}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":30},"generated":{"line":8,"column":18}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":32},"generated":{"line":8,"column":20}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":57},"generated":{"line":8,"column":29}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":80,"column":57},"generated":{"line":8,"column":31}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":9,"column":2}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":9},"generated":{"line":9,"column":9}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":9},"generated":{"line":9,"column":13}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":13},"generated":{"line":9,"column":23}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":14},"generated":{"line":9,"column":25}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":20},"generated":{"line":9,"column":31}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":21},"generated":{"line":9,"column":32}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":28},"generated":{"line":9,"column":39}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":29},"generated":{"line":9,"column":40}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":32},"generated":{"line":9,"column":43}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":33},"generated":{"line":9,"column":44}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":35},"generated":{"line":9,"column":46}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":51},"generated":{"line":9,"column":55}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":81,"column":52},"generated":{"line":9,"column":56}},{"source":"../../../../src/internal/observable/pairs.ts","name":null,"original":{"line":82,"column":0},"generated":{"line":10,"column":0}}],"sources":{"../../../../src/internal/observable/pairs.ts":"import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n"},"lineCount":null}},"error":null,"hash":"36483911e0252e9644070e68d5e841c1","cacheData":{"env":{}}}