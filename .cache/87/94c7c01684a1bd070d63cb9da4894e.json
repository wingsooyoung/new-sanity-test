{"id":"node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/operators/mergeMapTo.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"./mergeMap","loc":{"line":1,"column":25,"index":25},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27,"index":66},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeMapTo = mergeMapTo;\nvar _mergeMap = require(\"./mergeMap\");\nvar _isFunction = require(\"../util/isFunction\");\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n  if ((0, _isFunction.isFunction)(resultSelector)) {\n    return (0, _mergeMap.mergeMap)(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (0, _mergeMap.mergeMap)(function () {\n    return innerObservable;\n  }, concurrent);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":23}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":15}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":18}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":25}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":9,"column":9}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":9,"column":19}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":9,"column":20}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":63,"column":20},"generated":{"line":9,"column":35}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":9,"column":37}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":64,"column":122},"generated":{"line":9,"column":51}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":9,"column":53}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":9,"column":63}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":9,"column":65}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":16}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":21}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":26}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":27}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":10,"column":29}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":11,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":11,"column":14}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":11,"column":17}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":11,"column":25}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":12,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":13,"column":10}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":16},"generated":{"line":13,"column":32}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":13,"column":34}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":31},"generated":{"line":13,"column":48}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":32},"generated":{"line":13,"column":49}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":13,"column":51}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":14,"column":15}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":19},"generated":{"line":14,"column":33}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":20},"generated":{"line":14,"column":35}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":20},"generated":{"line":14,"column":47}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":16,"column":5}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":43},"generated":{"line":16,"column":7}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":57},"generated":{"line":16,"column":21}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":59},"generated":{"line":16,"column":23}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":69},"generated":{"line":16,"column":33}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":70},"generated":{"line":16,"column":34}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":18,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":27},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":32},"generated":{"line":18,"column":32}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":40},"generated":{"line":18,"column":40}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":42},"generated":{"line":18,"column":42}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":19,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":19,"column":14}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":17},"generated":{"line":19,"column":17}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":31},"generated":{"line":19,"column":31}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":21,"column":9}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":21,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":17},"generated":{"line":21,"column":31}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":21,"column":33}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":21,"column":45}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":22,"column":11}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":22,"column":26}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":23,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":23,"column":3}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":41},"generated":{"line":23,"column":5}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":51},"generated":{"line":23,"column":15}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":52},"generated":{"line":23,"column":16}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":74,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../../../../src/internal/operators/mergeMapTo.ts":"import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n"},"lineCount":null}},"error":null,"hash":"2b30fd1f7492718be889108962cfba1b","cacheData":{"env":{}}}