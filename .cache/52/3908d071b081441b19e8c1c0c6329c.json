{"id":"node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/operators/switchMapTo.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"./switchMap","loc":{"line":1,"column":26,"index":26},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27,"index":68},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchMapTo = switchMapTo;\nvar _switchMap = require(\"./switchMap\");\nvar _isFunction = require(\"../util/isFunction\");\nfunction switchMapTo(innerObservable, resultSelector) {\n  return (0, _isFunction.isFunction)(resultSelector) ? (0, _switchMap.switchMap)(function () {\n    return innerObservable;\n  }, resultSelector) : (0, _switchMap.switchMap)(function () {\n    return innerObservable;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":14}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":17}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":24}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":15}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":18}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":25}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":9,"column":9}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":59,"column":27},"generated":{"line":9,"column":20}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":9,"column":21}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":60,"column":20},"generated":{"line":9,"column":36}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":9,"column":38}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":61,"column":111},"generated":{"line":9,"column":52}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":61,"column":111},"generated":{"line":9,"column":54}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":10,"column":2}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":13}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":10,"column":35}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":20},"generated":{"line":10,"column":37}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":10,"column":51}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":35},"generated":{"line":10,"column":52}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":38},"generated":{"line":10,"column":55}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":38},"generated":{"line":10,"column":59}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":47},"generated":{"line":10,"column":79}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":10,"column":81}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":10,"column":93}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":11,"column":4}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":11,"column":11}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":69},"generated":{"line":11,"column":26}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":12,"column":2}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":69},"generated":{"line":12,"column":3}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":71},"generated":{"line":12,"column":5}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":85},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":86},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":89},"generated":{"line":12,"column":23}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":89},"generated":{"line":12,"column":27}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":98},"generated":{"line":12,"column":47}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":99},"generated":{"line":12,"column":49}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":99},"generated":{"line":12,"column":61}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":105},"generated":{"line":13,"column":4}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":105},"generated":{"line":13,"column":11}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":120},"generated":{"line":13,"column":26}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":105},"generated":{"line":14,"column":2}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":120},"generated":{"line":14,"column":3}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":121},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":15,"column":0}}],"sources":{"../../../../src/internal/operators/switchMapTo.ts":"import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n"},"lineCount":null}},"error":null,"hash":"2aad0678a785f56a249759076e440e30","cacheData":{"env":{}}}