{"id":"node_modules/rxjs/dist/esm5/internal/operators/take.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/take.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/operators/take.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"../observable/empty","loc":{"line":1,"column":22,"index":22},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/take.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/empty.js"},{"name":"../util/lift","loc":{"line":2,"column":24,"index":69},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/take.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41,"index":126},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/take.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.take = take;\nvar _empty = require(\"../observable/empty\");\nvar _lift = require(\"../util/lift\");\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\nfunction take(count) {\n  return count <= 0 ? function () {\n    return _empty.EMPTY;\n  } : (0, _lift.operate)(function (source, subscriber) {\n    var seen = 0;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      if (++seen <= count) {\n        subscriber.next(value);\n        if (count <= seen) {\n          subscriber.complete();\n        }\n      }\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":10}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":13}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":20}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":9}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":12}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":19}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":23}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":26}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":33}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":20},"generated":{"line":10,"column":13}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":24},"generated":{"line":10,"column":14}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":37},"generated":{"line":10,"column":19}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":37},"generated":{"line":10,"column":21}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":49,"column":14},"generated":{"line":11,"column":14}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":11,"column":18}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":11,"column":19}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":11,"column":22}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":11,"column":34}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":12,"column":11}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":17},"generated":{"line":12,"column":23}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":17},"generated":{"line":13,"column":3}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":13,"column":10}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":13},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":14},"generated":{"line":13,"column":25}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":13,"column":35}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":21},"generated":{"line":13,"column":41}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":23},"generated":{"line":13,"column":43}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":33},"generated":{"line":13,"column":53}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":33},"generated":{"line":13,"column":55}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":12},"generated":{"line":14,"column":8}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":16},"generated":{"line":14,"column":12}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":19},"generated":{"line":14,"column":15}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":20},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":15,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":14},"generated":{"line":15,"column":10}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":15},"generated":{"line":15,"column":11}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":24},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":15,"column":25}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":15,"column":69}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":35},"generated":{"line":15,"column":71}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":45},"generated":{"line":15,"column":81}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":15,"column":83}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":48},"generated":{"line":15,"column":93}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":53},"generated":{"line":15,"column":98}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":55,"column":53},"generated":{"line":15,"column":100}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":12},"generated":{"line":16,"column":6}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":16,"column":10}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":18},"generated":{"line":16,"column":12}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":26},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":31},"generated":{"line":16,"column":25}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":33},"generated":{"line":16,"column":27}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":14},"generated":{"line":17,"column":8}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":24},"generated":{"line":17,"column":18}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":25},"generated":{"line":17,"column":19}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":29},"generated":{"line":17,"column":23}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":30},"generated":{"line":17,"column":24}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":35},"generated":{"line":17,"column":29}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":60,"column":36},"generated":{"line":17,"column":30}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":14},"generated":{"line":18,"column":8}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":18},"generated":{"line":18,"column":12}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":23},"generated":{"line":18,"column":17}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":27},"generated":{"line":18,"column":21}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":31},"generated":{"line":18,"column":25}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":33},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":65,"column":16},"generated":{"line":19,"column":10}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":19,"column":20}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":19,"column":21}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":65,"column":35},"generated":{"line":19,"column":29}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":65,"column":35},"generated":{"line":19,"column":30}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":65,"column":37},"generated":{"line":19,"column":31}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":68,"column":10},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":22,"column":5}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":68,"column":12},"generated":{"line":22,"column":6}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":22,"column":7}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":23,"column":2}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":7},"generated":{"line":23,"column":3}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":23,"column":4}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":71,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../../../../src/internal/operators/take.ts":"import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n"},"lineCount":null}},"error":null,"hash":"8dea1fe6e133dd8750607fcad57a4f8e","cacheData":{"env":{}}}