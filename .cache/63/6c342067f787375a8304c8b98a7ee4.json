{"id":"node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/operators/onErrorResumeNextWith.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"tslib","loc":{"line":1,"column":38,"index":38},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","resolved":"/project/new-sanity-test/node_modules/tslib/tslib.es6.js"},{"name":"../util/argsOrArgArray","loc":{"line":2,"column":31,"index":78},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js"},{"name":"../observable/onErrorResumeNext","loc":{"line":3,"column":48,"index":152},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/observable/onErrorResumeNext.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onErrorResumeNext = void 0;\nexports.onErrorResumeNextWith = onErrorResumeNextWith;\nvar _tslib = require(\"tslib\");\nvar _argsOrArgArray = require(\"../util/argsOrArgArray\");\nvar _onErrorResumeNext = require(\"../observable/onErrorResumeNext\");\nfunction onErrorResumeNextWith() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  var nextSources = (0, _argsOrArgArray.argsOrArgArray)(sources);\n  return function (source) {\n    return _onErrorResumeNext.onErrorResumeNext.apply(void 0, (0, _tslib.__spreadArray)([source], (0, _tslib.__read)(nextSources)));\n  };\n}\nvar onErrorResumeNext = onErrorResumeNextWith;\nexports.onErrorResumeNext = onErrorResumeNext;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":4}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":19}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":22}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":29}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":4}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":22}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":25}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":32}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":6},"generated":{"line":11,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":16},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":11,"column":30}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":11,"column":31}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":11,"column":33}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":12,"column":2}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":12,"column":6}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":12,"column":13}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":12,"column":16}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":12,"column":18}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":7}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":11}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":16}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":75},"generated":{"line":13,"column":17}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":19}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":21}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":24}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":33}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":34}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":75},"generated":{"line":13,"column":40}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":42}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":13,"column":44}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":75},"generated":{"line":13,"column":46}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":75},"generated":{"line":13,"column":48}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":12}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":14}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":15}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":18}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":27}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":28}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":30}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":31}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":16,"column":2}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":16,"column":6}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":19},"generated":{"line":16,"column":17}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":22},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":22},"generated":{"line":16,"column":24}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":36},"generated":{"line":16,"column":54}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":16,"column":56}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":44},"generated":{"line":16,"column":63}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":83},"generated":{"line":16,"column":64}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":10},"generated":{"line":17,"column":19}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":16},"generated":{"line":17,"column":25}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":16},"generated":{"line":17,"column":27}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":18,"column":11}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":47}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":48}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":53}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":54}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":59}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":60}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":62}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":66}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":86}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":18,"column":88}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":32},"generated":{"line":18,"column":89}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":38},"generated":{"line":18,"column":95}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":38},"generated":{"line":18,"column":96}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":38},"generated":{"line":18,"column":98}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":38},"generated":{"line":18,"column":102}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":38},"generated":{"line":18,"column":115}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":43},"generated":{"line":18,"column":117}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":54},"generated":{"line":18,"column":128}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":54},"generated":{"line":18,"column":129}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":54},"generated":{"line":18,"column":130}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":54},"generated":{"line":18,"column":131}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":55},"generated":{"line":19,"column":3}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":94,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":21,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":13},"generated":{"line":21,"column":4}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":30},"generated":{"line":21,"column":21}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":33},"generated":{"line":21,"column":24}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":54},"generated":{"line":21,"column":45}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":22,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":22,"column":7}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":22,"column":8}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":22,"column":25}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":22,"column":28}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":55},"generated":{"line":22,"column":45}}],"sources":{"../../../../src/internal/operators/onErrorResumeNextWith.ts":"import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return (source) => oERNCreate(source, ...nextSources);\n}\n\n/**\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\n */\nexport const onErrorResumeNext = onErrorResumeNextWith;\n"},"lineCount":null}},"error":null,"hash":"e4f2527ba2af7fcec93baa0403b4c164","cacheData":{"env":{}}}