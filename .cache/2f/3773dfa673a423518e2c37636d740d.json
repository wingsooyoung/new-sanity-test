{"id":"node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","dependencies":[{"name":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js.map","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","includedInParent":true,"mtime":1696211014021},{"name":"/project/new-sanity-test/package.json","includedInParent":true,"mtime":1696219234123},{"name":"/project/new-sanity-test/node_modules/rxjs/package.json","includedInParent":true,"mtime":1696211014021},{"name":"../util/identity","loc":{"line":1,"column":25,"index":25},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/identity.js"},{"name":"../util/lift","loc":{"line":2,"column":24,"index":69},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41,"index":126},"parent":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","resolved":"/project/new-sanity-test/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.distinctUntilChanged = distinctUntilChanged;\nvar _identity = require(\"../util/identity\");\nvar _lift = require(\"../util/lift\");\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\nfunction distinctUntilChanged(comparator, keySelector) {\n  if (keySelector === void 0) {\n    keySelector = _identity.identity;\n  }\n  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n  return (0, _lift.operate)(function (source, subscriber) {\n    var previousKey;\n    var first = true;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      var currentKey = keySelector(value);\n      if (first || !comparator(previousKey, currentKey)) {\n        first = false;\n        previousKey = currentKey;\n        subscriber.next(value);\n      }\n    }));\n  });\n}\nfunction defaultCompare(a, b) {\n  return a === b;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":12}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":26}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":33}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":139,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":139,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":139,"column":36},"generated":{"line":10,"column":29}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":140,"column":2},"generated":{"line":10,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":140,"column":51},"generated":{"line":10,"column":40}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":10,"column":42}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":60},"generated":{"line":10,"column":53}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":60},"generated":{"line":10,"column":55}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":17}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":22}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":27}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":28}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":11,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":2},"generated":{"line":12,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":33},"generated":{"line":12,"column":18}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":60},"generated":{"line":12,"column":36}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":60},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":2},"generated":{"line":14,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":12},"generated":{"line":14,"column":12}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":15},"generated":{"line":14,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":34}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":15},"generated":{"line":14,"column":38}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":48}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":53}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":58}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":59}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":15},"generated":{"line":14,"column":62}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":25},"generated":{"line":14,"column":72}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":29},"generated":{"line":14,"column":75}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":146,"column":43},"generated":{"line":14,"column":89}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":9},"generated":{"line":15,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":9},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":16},"generated":{"line":15,"column":26}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":17},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":18},"generated":{"line":15,"column":38}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":24},"generated":{"line":15,"column":44}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":26},"generated":{"line":15,"column":46}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":36},"generated":{"line":15,"column":56}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":36},"generated":{"line":15,"column":58}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":151,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":151,"column":8},"generated":{"line":16,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":151,"column":22},"generated":{"line":16,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":4},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":8},"generated":{"line":17,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":13},"generated":{"line":17,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":16},"generated":{"line":17,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":20},"generated":{"line":17,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":4},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":10},"generated":{"line":18,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":11},"generated":{"line":18,"column":11}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":20},"generated":{"line":18,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":6},"generated":{"line":18,"column":21}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":6},"generated":{"line":18,"column":25}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":30},"generated":{"line":18,"column":69}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":31},"generated":{"line":18,"column":71}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":41},"generated":{"line":18,"column":81}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":43},"generated":{"line":18,"column":83}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":44},"generated":{"line":18,"column":93}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":49},"generated":{"line":18,"column":98}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":156,"column":49},"generated":{"line":18,"column":100}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":8},"generated":{"line":19,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":14},"generated":{"line":19,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":24},"generated":{"line":19,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":27},"generated":{"line":19,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":38},"generated":{"line":19,"column":34}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":39},"generated":{"line":19,"column":35}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":44},"generated":{"line":19,"column":40}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":45},"generated":{"line":19,"column":41}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":8},"generated":{"line":20,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":12},"generated":{"line":20,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":17},"generated":{"line":20,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":21},"generated":{"line":20,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":22},"generated":{"line":20,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":33},"generated":{"line":20,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":34},"generated":{"line":20,"column":31}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":45},"generated":{"line":20,"column":42}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":47},"generated":{"line":20,"column":44}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":57},"generated":{"line":20,"column":54}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":58},"generated":{"line":20,"column":55}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":163,"column":60},"generated":{"line":20,"column":57}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":169,"column":10},"generated":{"line":21,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":169,"column":15},"generated":{"line":21,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":169,"column":18},"generated":{"line":21,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":169,"column":23},"generated":{"line":21,"column":21}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":170,"column":10},"generated":{"line":22,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":170,"column":21},"generated":{"line":22,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":170,"column":24},"generated":{"line":22,"column":22}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":170,"column":34},"generated":{"line":22,"column":32}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":10},"generated":{"line":23,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":20},"generated":{"line":23,"column":18}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":21},"generated":{"line":23,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":25},"generated":{"line":23,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":26},"generated":{"line":23,"column":24}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":31},"generated":{"line":23,"column":29}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":173,"column":32},"generated":{"line":23,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":6},"generated":{"line":25,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":7},"generated":{"line":25,"column":5}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":8},"generated":{"line":25,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":176,"column":5},"generated":{"line":25,"column":7}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":177,"column":2},"generated":{"line":26,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":177,"column":3},"generated":{"line":26,"column":3}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":177,"column":4},"generated":{"line":26,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":178,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":9},"generated":{"line":28,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":23},"generated":{"line":28,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":24},"generated":{"line":28,"column":24}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":30},"generated":{"line":28,"column":25}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":32},"generated":{"line":28,"column":27}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":38},"generated":{"line":28,"column":28}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":38},"generated":{"line":28,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":181,"column":2},"generated":{"line":29,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":181,"column":9},"generated":{"line":29,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":181,"column":10},"generated":{"line":29,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":181,"column":15},"generated":{"line":29,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":181,"column":16},"generated":{"line":29,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../../../../src/internal/operators/distinctUntilChanged.ts":"import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n"},"lineCount":null}},"error":null,"hash":"d3acef8f0ffe7506da69684e5488bdff","cacheData":{"env":{}}}